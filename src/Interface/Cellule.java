/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Tools.Outils;
import Tools.Pion;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import javax.swing.JOptionPane;




public class Cellule extends javax.swing.JPanel implements MouseMotionListener, MouseListener {
    
    public static int TAILLE_CELL = 50;         //------ La taille de cellule est 50
    private int id = 0;                         //------ L'id d'une cellule
    private Pion pion;                          //------ declaration d'un pion
    
    //-------- Constructeur -------------
    public Cellule(int id) {
        initComponents();
        this.id = id;
    }
    
    
    //-------- Getter & Setter ----------
    public void setId(int id) {
        this.id = id;
    }
    
    public int getId() {
        return this.id;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(0, 153, 0));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(74, 64, 55)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 48, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 48, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    //------- Dessiner un pion ------------
    public void drawPion(Color color) {
        pion = new Pion(color);
        this.repaint();
    }
    
  
    public void eraseCellule() {
        pion = null;
        this.repaint();
    }
    
    //-------- paint ----------
    @Override
    public void paint(Graphics g) {
        Graphics2D g2d = (Graphics2D) g;
        super.paint(g2d);
        if(pion != null)
            pion.dessinerPion((Graphics2D) g);
        else
        {
            Pion epion = new Pion(new Color(0, 153, 0));
            epion.dessinerPion((Graphics2D) g);
        }
    }
    
    /***************************************************************************
     * Si le joueur a cliquer sur une position deja remplie par un pion, il va 
     * afficher sur l'ecran un message qui indique l'existenece de ce pion deja 
     * sur le plateau, sinon on remplie la case par le pion
     **************************************************************************/
    @Override
    public void mouseClicked(MouseEvent e) {
        
        if(pion != null)
        {
            JOptionPane.showMessageDialog(this, "Il y a un pion déjà !");
            System.out.println("Il y a un pion déjà !");
        }
        else
        {
            pion = new Pion(Color.black);
            int x = e.getComponent().getY()/50;
            int y = e.getComponent().getX()/50;
            int tmp;
            int k = 0;
            for(int i = 0; i < 8; i++)
            {
                for(int j = 0; j < 8; j++)
                {
                    if(x == i && y == j)
                    {
                        Outils.isClicked = true;
                        Outils.moveIndex = this.getId();
                        
                        break;
                    }
                    k++;
                }
            }
            this.repaint();
        }   
    }
    
    @Override
    public void mouseDragged(MouseEvent e) {
        //System.out.println("MouseDragged : X : " + e.getX() + ", Y : " + e.getY());
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseMoved(MouseEvent e) {
        //System.out.println("MouseMoved : X : " + e.getX() + ", Y : " + e.getY());
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mousePressed(MouseEvent e) {
        //System.out.println("MousePressed : X : " + e.getX() + ", Y : " + e.getY());
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        //System.out.println("MouseReleased : X : " + e.getX() + ", Y : " + e.getY());
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        //System.out.println("MouseEntered : X : " + e.getX() + ", Y : " + e.getY());
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseExited(MouseEvent e) {
        //System.out.println("MouseExited : X : " + e.getX() + ", Y : " + e.getY());
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
